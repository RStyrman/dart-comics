= Dart Comics

A simple Dart front-end for organizing comic books across formats. The backend is a simple express.js / node-dirty application.

== Install

=== Prerequisites

* Node.js (0.6+) and npm
* Dart binaries

=== Node.js Backend

Node.js powers the simple REST-like backend. Node is found at http://nodejs.org/#download.

A number of node packages are used, the primary of which are http:http://expressjs.com/[express.js] (provides a nice DSL for writing REST-like applications) and http:https://github.com/felixge/node-dirty[node-dirty] (a simple nosql datastore). Installation of these packages is accomplished with http:http://npmjs.org/[npm] (the node package manager).  The following two commands will install npm, express.js, node-dirty and everything else needed:

----
curl http://npmjs.org/install.sh | sh
npm install
----

=== Dart Frontend

These are not strictly needed if you have access to a Dart enabled browser.  But, since Dart enabled browsers are somewhat rare, Dart executables can be used to compile the Dart code into Javascript.

Grab the executable appropriate for you platform from the http:from http://gsdview.appspot.com/dart-editor-archive-continuous/latest/[dart binaries server] (i.e. get dart-linux.zip, dart-macos.zip, or dart-win32.zip).

== Running

To compile the Dart into Javascript, use `frogc` from the Dart binaries:

----
$ frogc public/scripts/*.dart
----

The application will automatically fallback to Javascript for browsers that do not support Dart.

To start the backend server, execute the node application:

----
$ node app.js
----
